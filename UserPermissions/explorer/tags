!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$emailCsv	static/explorer/query-list.js	/^var $emailCsv = $('.email-csv');$/;"	v
BaseExporter	exporters.py	/^class BaseExporter(object):$/;"	c
CSVExporter	exporters.py	/^class CSVExporter(BaseExporter):$/;"	c
CSV_DELIMETER	app_settings.py	/^CSV_DELIMETER = getattr(settings, "EXPLORER_CSV_DELIMETER", ",")$/;"	v
ColumnHeader	models.py	/^class ColumnHeader(object):$/;"	c
ColumnStat	models.py	/^class ColumnStat(object):$/;"	c
ColumnSummary	models.py	/^class ColumnSummary(object):$/;"	c
CreateQueryView	views.py	/^class CreateQueryView(ExplorerContextMixin, CreateView):$/;"	c
DeleteQueryView	views.py	/^class DeleteQueryView(ExplorerContextMixin, DeleteView):$/;"	c
ENABLE_TASKS	app_settings.py	/^ENABLE_TASKS = getattr(settings, "EXPLORER_TASKS_ENABLED", False)$/;"	v
EXPLORER_CONNECTION_NAME	app_settings.py	/^EXPLORER_CONNECTION_NAME = getattr(settings, 'EXPLORER_CONNECTION_NAME', None)$/;"	v
EXPLORER_DATA_EXPORTERS	app_settings.py	/^EXPLORER_DATA_EXPORTERS = getattr(settings, 'EXPLORER_DATA_EXPORTERS', {$/;"	v
EXPLORER_DEFAULT_ROWS	app_settings.py	/^EXPLORER_DEFAULT_ROWS = getattr(settings, 'EXPLORER_DEFAULT_ROWS', 1000)$/;"	v
EXPLORER_GET_USER_QUERY_VIEWS	app_settings.py	/^EXPLORER_GET_USER_QUERY_VIEWS = lambda: getattr(settings, 'EXPLORER_USER_QUERY_VIEWS', {})$/;"	v
EXPLORER_PARAM_TOKEN	utils.py	/^EXPLORER_PARAM_TOKEN = "$$"$/;"	v
EXPLORER_PERMISSION_CHANGE	app_settings.py	/^EXPLORER_PERMISSION_CHANGE = getattr(settings, 'EXPLORER_PERMISSION_CHANGE', lambda u: u.is_staff)$/;"	v
EXPLORER_PERMISSION_VIEW	app_settings.py	/^EXPLORER_PERMISSION_VIEW = getattr(settings, 'EXPLORER_PERMISSION_VIEW', lambda u: u.is_staff)$/;"	v
EXPLORER_RECENT_QUERY_COUNT	app_settings.py	/^EXPLORER_RECENT_QUERY_COUNT = getattr(settings, 'EXPLORER_RECENT_QUERY_COUNT', 10)$/;"	v
EXPLORER_SCHEMA_EXCLUDE_APPS	app_settings.py	/^EXPLORER_SCHEMA_EXCLUDE_APPS = getattr(settings, 'EXPLORER_SCHEMA_EXCLUDE_APPS', ('django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.admin'))$/;"	v
EXPLORER_SCHEMA_INCLUDE_APPS	app_settings.py	/^EXPLORER_SCHEMA_INCLUDE_APPS = getattr(settings, 'EXPLORER_SCHEMA_INCLUDE_APPS', None)$/;"	v
EXPLORER_SQL_BLACKLIST	app_settings.py	/^EXPLORER_SQL_BLACKLIST = getattr(settings, 'EXPLORER_SQL_BLACKLIST', ('ALTER', 'RENAME ', 'DROP', 'TRUNCATE', 'INSERT INTO', 'UPDATE', 'REPLACE', 'DELETE', 'CREATE TABLE', 'SCHEMA', 'GRANT', 'OWNER TO'))$/;"	v
EXPLORER_SQL_WHITELIST	app_settings.py	/^EXPLORER_SQL_WHITELIST = getattr(settings, 'EXPLORER_SQL_WHITELIST', ('CREATED', 'DELETED', 'REGEXP_REPLACE'))$/;"	v
EXPLORER_TOKEN	app_settings.py	/^EXPLORER_TOKEN = getattr(settings, 'EXPLORER_TOKEN', 'CHANGEME')$/;"	v
EXPLORER_TOKEN_AUTH_ENABLED	app_settings.py	/^EXPLORER_TOKEN_AUTH_ENABLED = lambda: getattr(settings, 'EXPLORER_TOKEN_AUTH_ENABLED', False)$/;"	v
EXPLORER_TRANSFORMS	app_settings.py	/^EXPLORER_TRANSFORMS = getattr(settings, 'EXPLORER_TRANSFORMS', [])$/;"	v
ExcelExporter	exporters.py	/^class ExcelExporter(BaseExporter):$/;"	c
ExplorerContextMixin	views.py	/^class ExplorerContextMixin(object):$/;"	c
ExplorerEditor	static/explorer/explorer.js	/^function ExplorerEditor(queryId, dataUrl) {$/;"	c
FROM_EMAIL	app_settings.py	/^FROM_EMAIL = getattr(settings, 'EXPLORER_FROM_EMAIL', 'django-sql-explorer@example.com')/;"	v
JSONExporter	exporters.py	/^class JSONExporter(BaseExporter):$/;"	c
ListQueryLogView	views.py	/^class ListQueryLogView(ExplorerContextMixin, ListView):$/;"	c
ListQueryView	views.py	/^class ListQueryView(ExplorerContextMixin, ListView):$/;"	c
MSG_FAILED_BLACKLIST	models.py	/^MSG_FAILED_BLACKLIST = "Query failed the SQL blacklist: %s"$/;"	v
Meta	forms.py	/^    class Meta:$/;"	c	class:QueryForm
Meta	models.py	/^    class Meta:$/;"	c	class:Query
Meta	models.py	/^    class Meta:$/;"	c	class:QueryLog
Meta	tests/factories.py	/^    class Meta:$/;"	c	class:QueryLogFactory
Meta	tests/factories.py	/^    class Meta:$/;"	c	class:SimpleQueryFactory
Migration	migrations/0001_initial.py	/^class Migration(migrations.Migration):$/;"	c
Migration	migrations/0002_auto_20150501_1515.py	/^class Migration(migrations.Migration):$/;"	c
Migration	migrations/0003_query_snapshot.py	/^class Migration(migrations.Migration):$/;"	c
Migration	migrations/0004_querylog_duration.py	/^class Migration(migrations.Migration):$/;"	c
Migration	migrations/0005_auto_20160105_2052.py	/^class Migration(migrations.Migration):$/;"	c
Migration	migrations/0006_query_activate.py	/^class Migration(migrations.Migration):$/;"	c
Migration	migrations/0007_query_menu.py	/^class Migration(migrations.Migration):$/;"	c
PlayQueryView	views.py	/^class PlayQueryView(ExplorerContextMixin, View):$/;"	c
Query	models.py	/^class Query(models.Model):$/;"	c
QueryAdmin	admin.py	/^class QueryAdmin(GuardedModelAdmin):$/;"	c
QueryForm	forms.py	/^class QueryForm(ModelForm):$/;"	c
QueryLog	models.py	/^class QueryLog(models.Model):$/;"	c
QueryLogFactory	tests/factories.py	/^class QueryLogFactory(factory.DjangoModelFactory):$/;"	c
QueryResult	models.py	/^class QueryResult(object):$/;"	c
QueryView	views.py	/^class QueryView(ExplorerContextMixin, View):$/;"	c
S3_ACCESS_KEY	app_settings.py	/^S3_ACCESS_KEY = getattr(settings, "EXPLORER_S3_ACCESS_KEY", None)$/;"	v
S3_BUCKET	app_settings.py	/^S3_BUCKET = getattr(settings, "EXPLORER_S3_BUCKET", None)$/;"	v
S3_SECRET_KEY	app_settings.py	/^S3_SECRET_KEY = getattr(settings, "EXPLORER_S3_SECRET_KEY", None)$/;"	v
SearchFocus	templates/explorer/query_list.html	/^        function SearchFocus() {$/;"	f
SearchFocus	templates/explorer/schema.html	/^        function SearchFocus() {$/;"	f
SimpleQueryFactory	tests/factories.py	/^class SimpleQueryFactory(factory.DjangoModelFactory):$/;"	c
SqlField	forms.py	/^class SqlField(Field):$/;"	c
TestCSVFromSQL	tests/test_views.py	/^class TestCSVFromSQL(TestCase):$/;"	c
TestColumnSummary	tests/test_models.py	/^class TestColumnSummary(TestCase):$/;"	c
TestCreatedBy	tests/test_views.py	/^class TestCreatedBy(TestCase):$/;"	c
TestCsv	tests/test_exporters.py	/^class TestCsv(TestCase):$/;"	c
TestDownloadView	tests/test_views.py	/^class TestDownloadView(TestCase):$/;"	c
TestEmailQuery	tests/test_views.py	/^class TestEmailQuery(TestCase):$/;"	c
TestExcel	tests/test_exporters.py	/^class TestExcel(TestCase):$/;"	c
TestFormValidation	tests/test_forms.py	/^class TestFormValidation(TestCase):$/;"	c
TestFormat	tests/test_views.py	/^class TestFormat(TestCase):$/;"	c
TestJson	tests/test_exporters.py	/^class TestJson(TestCase):$/;"	c
TestParams	tests/test_utils.py	/^class TestParams(TestCase):$/;"	c
TestParamsInViews	tests/test_views.py	/^class TestParamsInViews(TestCase):$/;"	c
TestQueryCreateView	tests/test_views.py	/^class TestQueryCreateView(TestCase):$/;"	c
TestQueryDetailView	tests/test_views.py	/^class TestQueryDetailView(TestCase):$/;"	c
TestQueryListView	tests/test_views.py	/^class TestQueryListView(TestCase):$/;"	c
TestQueryLog	tests/test_views.py	/^class TestQueryLog(TestCase):$/;"	c
TestQueryModel	tests/test_models.py	/^class TestQueryModel(TestCase):$/;"	c
TestQueryPlayground	tests/test_views.py	/^class TestQueryPlayground(TestCase):$/;"	c
TestQueryResults	tests/test_models.py	/^class TestQueryResults(TestCase):$/;"	c
TestSQLDownloadViews	tests/test_views.py	/^class TestSQLDownloadViews(TestCase):$/;"	c
TestSchemaInfo	tests/test_utils.py	/^class TestSchemaInfo(TestCase):$/;"	c
TestSchemaView	tests/test_views.py	/^class TestSchemaView(TestCase):$/;"	c
TestSqlBlacklist	tests/test_utils.py	/^class TestSqlBlacklist(TestCase):$/;"	c
TestSqlQueryActions	tests/test_actions.py	/^class TestSqlQueryActions(TestCase):$/;"	c
TestTasks	tests/test_tasks.py	/^class TestTasks(TestCase):$/;"	c
_	actions.py	/^_ = lambda x: x$/;"	v
_	forms.py	/^_ = lambda x: x$/;"	v
_	tests/test_views.py	/^_ = lambda x: x$/;"	v
__call__	models.py	/^    def __call__(self, coldata):$/;"	m	class:ColumnStat	file:
__init__	exporters.py	/^    def __init__(self, query):$/;"	m	class:BaseExporter
__init__	models.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Query
__init__	models.py	/^    def __init__(self, header, col):$/;"	m	class:ColumnSummary
__init__	models.py	/^    def __init__(self, label, statfn, precision=2, handles_null=False):$/;"	m	class:ColumnStat
__init__	models.py	/^    def __init__(self, sql):$/;"	m	class:QueryResult
__init__	models.py	/^    def __init__(self, title):$/;"	m	class:ColumnHeader
__str__	models.py	/^    def __str__(self):$/;"	m	class:ColumnHeader	file:
__str__	models.py	/^    def __str__(self):$/;"	m	class:ColumnSummary	file:
__unicode__	models.py	/^    def __unicode__(self):$/;"	m	class:ColumnHeader	file:
__unicode__	models.py	/^    def __unicode__(self):$/;"	m	class:ColumnStat	file:
__unicode__	models.py	/^    def __unicode__(self):$/;"	m	class:Query	file:
__version__	__init__.py	/^__version__ = get_version()$/;"	v
__version_info__	__init__.py	/^__version_info__ = {$/;"	v
_assertSwap	tests/test_utils.py	/^    def _assertSwap(self, tuple):$/;"	m	class:TestParams
_build_queries_and_headers	views.py	/^    def _build_queries_and_headers(self):$/;"	m	class:ListQueryView
_build_zip	actions.py	/^def _build_zip(queries):$/;"	f
_export	views.py	/^def _export(request, query, download=True):$/;"	f
_format_field	utils.py	/^def _format_field(field):$/;"	f
_get_headers	models.py	/^    def _get_headers(self):$/;"	m	class:QueryResult
_get_numerics	models.py	/^    def _get_numerics(self):$/;"	m	class:QueryResult
_get_output	exporters.py	/^    def _get_output(self, res, **kwargs):$/;"	m	class:BaseExporter
_get_output	exporters.py	/^    def _get_output(self, res, **kwargs):$/;"	m	class:CSVExporter
_get_output	exporters.py	/^    def _get_output(self, res, **kwargs):$/;"	m	class:ExcelExporter
_get_output	exporters.py	/^    def _get_output(self, res, **kwargs):$/;"	m	class:JSONExporter
_get_transforms	models.py	/^    def _get_transforms(self):$/;"	m	class:QueryResult
_package	actions.py	/^def _package(queries):$/;"	f
_upload	tasks.py	/^def _upload(key, data):$/;"	f
actions	admin.py	/^    actions = [generate_report_action()]$/;"	v	class:QueryAdmin
activate	models.py	/^    activate = models.BooleanField(default=False, help_text="activate task (if enabled)")$/;"	v	class:Query
add_summary	models.py	/^    def add_summary(self, column):$/;"	m	class:ColumnHeader
allowed_query_pks	utils.py	/^def allowed_query_pks(user_id):$/;"	f
available_params	models.py	/^    def available_params(self):$/;"	m	class:Query
avg_duration	models.py	/^    def avg_duration(self):$/;"	m	class:Query
bases	migrations/0001_initial.py	/^            bases=(models.Model,),$/;"	v	class:Migration
bind	static/explorer/explorer.js	/^ExplorerEditor.prototype.bind = function() {$/;"	m	class:ExplorerEditor
change_permission	views.py	/^def change_permission(f):$/;"	f
clean	forms.py	/^    def clean(self):$/;"	m	class:QueryForm
column	models.py	/^    def column(self, ix):$/;"	m	class:QueryResult
content_type	exporters.py	/^    content_type = ''$/;"	v	class:BaseExporter
content_type	exporters.py	/^    content_type = 'application\/json'$/;"	v	class:JSONExporter
content_type	exporters.py	/^    content_type = 'application\/vnd.ms-excel'$/;"	v	class:ExcelExporter
content_type	exporters.py	/^    content_type = 'text\/csv'$/;"	v	class:CSVExporter
context_object_name	views.py	/^    context_object_name = "recent_logs"$/;"	v	class:ListQueryLogView
created_at	models.py	/^    created_at = models.DateTimeField(auto_now_add=True)$/;"	v	class:Query
created_by_user	models.py	/^    created_by_user = models.ForeignKey(settings.AUTH_USER_MODEL, null=True, blank=True)$/;"	v	class:Query
created_by_user_email	forms.py	/^    def created_by_user_email(self):$/;"	m	class:QueryForm
created_by_user_id	forms.py	/^    def created_by_user_id(self):$/;"	m	class:QueryForm
created_by_user_id	tests/factories.py	/^    created_by_user_id = 1$/;"	v	class:SimpleQueryFactory
csrf_token	static/explorer/explorer.js	/^var csrf_token = $.cookie('csrftoken');$/;"	v
data	models.py	/^    def data(self):$/;"	m	class:QueryResult
dependencies	migrations/0001_initial.py	/^    dependencies = [$/;"	v	class:Migration
dependencies	migrations/0002_auto_20150501_1515.py	/^    dependencies = [$/;"	v	class:Migration
dependencies	migrations/0003_query_snapshot.py	/^    dependencies = [$/;"	v	class:Migration
dependencies	migrations/0004_querylog_duration.py	/^    dependencies = [$/;"	v	class:Migration
dependencies	migrations/0005_auto_20160105_2052.py	/^    dependencies = [$/;"	v	class:Migration
dependencies	migrations/0006_query_activate.py	/^    dependencies = [$/;"	v	class:Migration
dependencies	migrations/0007_query_menu.py	/^    dependencies = [$/;"	v	class:Migration
description	models.py	/^    description = models.TextField(null=True, blank=True)$/;"	v	class:Query
description	tests/factories.py	/^    description = "Doin' math"$/;"	v	class:SimpleQueryFactory
dispatch	views.py	/^    def dispatch(self, *args, **kwargs):$/;"	m	class:CreateQueryView
dispatch	views.py	/^    def dispatch(self, *args, **kwargs):$/;"	m	class:DeleteQueryView
dispatch	views.py	/^    def dispatch(self, *args, **kwargs):$/;"	m	class:ListQueryLogView
dispatch	views.py	/^    def dispatch(self, *args, **kwargs):$/;"	m	class:ListQueryView
dispatch	views.py	/^    def dispatch(self, *args, **kwargs):$/;"	m	class:PlayQueryView
dispatch	views.py	/^    def dispatch(self, *args, **kwargs):$/;"	m	class:QueryView
doCodeMirrorSubmit	static/explorer/explorer.js	/^ExplorerEditor.prototype.doCodeMirrorSubmit = function() {$/;"	m	class:ExplorerEditor
download_from_sql	views.py	/^def download_from_sql(request):$/;"	f
download_query	views.py	/^def download_query(request, query_id):$/;"	f
duration	models.py	/^    duration = models.FloatField(blank=True, null=True)  # milliseconds$/;"	v	class:QueryLog
email_csv_query	views.py	/^def email_csv_query(request, query_id):$/;"	f
execute	models.py	/^    def execute(self):$/;"	m	class:Query
execute_query	models.py	/^    def execute_query(self):$/;"	m	class:QueryResult
execute_query	tasks.py	/^def execute_query(query_id, email_address):$/;"	f
execute_query_only	models.py	/^    def execute_query_only(self):$/;"	m	class:Query
execute_with_logging	models.py	/^    def execute_with_logging(self, executing_user):$/;"	m	class:Query
export_buttons	templatetags/explorer_tags.py	/^def export_buttons(query=None):$/;"	f
extract_params	utils.py	/^def extract_params(text):$/;"	f
field	migrations/0002_auto_20150501_1515.py	/^            field=models.TextField(null=True, blank=True),$/;"	v	class:Migration
field	migrations/0003_query_snapshot.py	/^            field=models.BooleanField(default=False, help_text=b'Include in snapshot task (if enabled)'),$/;"	v	class:Migration
field	migrations/0004_querylog_duration.py	/^            field=models.FloatField(null=True, blank=True),$/;"	v	class:Migration
field	migrations/0005_auto_20160105_2052.py	/^            field=models.BooleanField(default=False, help_text='Include in snapshot task (if enabled)'),$/;"	v	class:Migration
field	migrations/0006_query_activate.py	/^            field=models.BooleanField(default=False, help_text=b'activate task (if enabled)'),$/;"	v	class:Migration
field	migrations/0007_query_menu.py	/^            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='menu.Menus'),$/;"	v	class:Migration
fields	forms.py	/^        fields = ['title', 'sql', 'description', 'created_by_user', 'snapshot']/;"	v	class:QueryForm.Meta
fields	migrations/0001_initial.py	/^            fields=[$/;"	v	class:Migration
file_extension	exporters.py	/^    file_extension = ''$/;"	v	class:BaseExporter
file_extension	exporters.py	/^    file_extension = '.csv'$/;"	v	class:CSVExporter
file_extension	exporters.py	/^    file_extension = '.json'$/;"	v	class:JSONExporter
file_extension	exporters.py	/^    file_extension = '.xlsx'$/;"	v	class:ExcelExporter
final_sql	models.py	/^    def final_sql(self):$/;"	m	class:Query
fmt_sql	utils.py	/^def fmt_sql(sql):$/;"	f
form_class	views.py	/^    form_class = QueryForm$/;"	v	class:CreateQueryView
form_valid	views.py	/^    def form_valid(self, form):$/;"	m	class:CreateQueryView
formatSql	static/explorer/explorer.js	/^ExplorerEditor.prototype.formatSql = function() {$/;"	m	class:ExplorerEditor
format_sql	views.py	/^def format_sql(request):$/;"	f
gen_ctx	views.py	/^    def gen_ctx(self):$/;"	m	class:ExplorerContextMixin
generate_report	actions.py	/^    def generate_report(modeladmin, request, queryset):$/;"	f	function:generate_report_action
generate_report_action	actions.py	/^def generate_report_action(description="Generate CSV file from SQL query",):$/;"	f
get	views.py	/^    def get(self, request):$/;"	m	class:PlayQueryView
get	views.py	/^    def get(self, request, query_id):$/;"	m	class:QueryView
getParams	static/explorer/explorer.js	/^ExplorerEditor.prototype.getParams = function() {$/;"	m	class:ExplorerEditor
get_absolute_url	models.py	/^    def get_absolute_url(self):$/;"	m	class:Query
get_connection	utils.py	/^def get_connection():$/;"	f
get_context_data	views.py	/^    def get_context_data(self, **kwargs):$/;"	m	class:ExplorerContextMixin
get_context_data	views.py	/^    def get_context_data(self, **kwargs):$/;"	m	class:ListQueryView
get_exporter_class	exporters.py	/^def get_exporter_class(format):$/;"	f
get_file_output	exporters.py	/^    def get_file_output(self, **kwargs):$/;"	m	class:BaseExporter
get_filename	exporters.py	/^    def get_filename(self):$/;"	m	class:BaseExporter
get_instance_and_form	views.py	/^    def get_instance_and_form(request, query_id):$/;"	m	class:QueryView
get_int_from_request	utils.py	/^def get_int_from_request(request, name, default):$/;"	f
get_output	exporters.py	/^    def get_output(self, **kwargs):$/;"	m	class:BaseExporter
get_params_for_url	utils.py	/^def get_params_for_url(query):$/;"	f
get_params_from_request	utils.py	/^def get_params_from_request(request):$/;"	f
get_queryset	views.py	/^    def get_queryset(self):$/;"	m	class:ListQueryLogView
get_queryset	views.py	/^    def get_queryset(self):$/;"	m	class:ListQueryView
get_run_count	models.py	/^    def get_run_count(self):$/;"	m	class:Query
get_s3_connection	utils.py	/^def get_s3_connection():$/;"	f
get_version	__init__.py	/^def get_version(short=False):$/;"	f
header_strings	models.py	/^    def header_strings(self):$/;"	m	class:QueryResult
headers	models.py	/^    def headers(self):$/;"	m	class:QueryResult
hideSchema	static/explorer/explorer.js	/^ExplorerEditor.prototype.hideSchema = function() {$/;"	m	class:ExplorerEditor
isValidEmail	static/explorer/query-list.js	/^var isValidEmail = function (email) {$/;"	f
is_playground	models.py	/^    def is_playground(self):$/;"	m	class:QueryLog
last_run_date	models.py	/^    last_run_date = models.DateTimeField(auto_now=True)$/;"	v	class:Query
list_display	admin.py	/^    list_display = ('title', 'description', 'created_by_user',)$/;"	v	class:QueryAdmin
list_filter	admin.py	/^    list_filter = ('title',)$/;"	v	class:QueryAdmin
log	models.py	/^    def log(self, user=None):$/;"	m	class:Query
logger	models.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tasks.py	/^    logger = get_task_logger(__name__)$/;"	v
logger	tasks.py	/^    logger = logging.getLogger(__name__)$/;"	v
menu	models.py	/^    menu = models.ForeignKey(Menus, blank=True, null=True)$/;"	v	class:Query
model	forms.py	/^        model = Query$/;"	v	class:QueryForm.Meta
model	tests/factories.py	/^        model = models.Query$/;"	v	class:SimpleQueryFactory.Meta
model	tests/factories.py	/^        model = models.QueryLog$/;"	v	class:QueryLogFactory.Meta
model	views.py	/^    model = Query$/;"	v	class:DeleteQueryView
model	views.py	/^    model = Query$/;"	v	class:ListQueryView
model	views.py	/^    model = QueryLog$/;"	v	class:ListQueryLogView
model_name	migrations/0002_auto_20150501_1515.py	/^            model_name='querylog',$/;"	v	class:Migration
model_name	migrations/0003_query_snapshot.py	/^            model_name='query',$/;"	v	class:Migration
model_name	migrations/0004_querylog_duration.py	/^            model_name='querylog',$/;"	v	class:Migration
model_name	migrations/0005_auto_20160105_2052.py	/^            model_name='query',$/;"	v	class:Migration
model_name	migrations/0006_query_activate.py	/^            model_name='query',$/;"	v	class:Migration
model_name	migrations/0007_query_menu.py	/^            model_name='query',$/;"	v	class:Migration
name	exporters.py	/^    name = ''$/;"	v	class:BaseExporter
name	exporters.py	/^    name = 'CSV'$/;"	v	class:CSVExporter
name	exporters.py	/^    name = 'Excel'$/;"	v	class:ExcelExporter
name	exporters.py	/^    name = 'JSON'$/;"	v	class:JSONExporter
name	migrations/0001_initial.py	/^            name='Query',$/;"	v	class:Migration
name	migrations/0001_initial.py	/^            name='QueryLog',$/;"	v	class:Migration
name	migrations/0002_auto_20150501_1515.py	/^            name='is_playground',$/;"	v	class:Migration
name	migrations/0002_auto_20150501_1515.py	/^            name='sql',$/;"	v	class:Migration
name	migrations/0003_query_snapshot.py	/^            name='snapshot',$/;"	v	class:Migration
name	migrations/0004_querylog_duration.py	/^            name='duration',$/;"	v	class:Migration
name	migrations/0005_auto_20160105_2052.py	/^            name='snapshot',$/;"	v	class:Migration
name	migrations/0006_query_activate.py	/^            name='activate',$/;"	v	class:Migration
name	migrations/0007_query_menu.py	/^            name='menu',$/;"	v	class:Migration
noop_decorator	utils.py	/^def noop_decorator(f):$/;"	f
onRefresh	static/explorer/explorer.js	/^            pivotState = {onRefresh: this.savePivotState};$/;"	p	class:pivotState
onRefresh	static/explorer/explorer.js	/^        pivotState = {onRefresh: this.savePivotState};$/;"	p	class:pivotState
operations	migrations/0001_initial.py	/^    operations = [$/;"	v	class:Migration
operations	migrations/0002_auto_20150501_1515.py	/^    operations = [$/;"	v	class:Migration
operations	migrations/0003_query_snapshot.py	/^    operations = [$/;"	v	class:Migration
operations	migrations/0004_querylog_duration.py	/^    operations = [$/;"	v	class:Migration
operations	migrations/0005_auto_20160105_2052.py	/^    operations = [$/;"	v	class:Migration
operations	migrations/0006_query_activate.py	/^    operations = [$/;"	v	class:Migration
operations	migrations/0007_query_menu.py	/^    operations = [$/;"	v	class:Migration
options	migrations/0001_initial.py	/^            options={$/;"	v	class:Migration
ordering	models.py	/^        ordering = ['-run_at']$/;"	v	class:QueryLog.Meta
ordering	models.py	/^        ordering = ['title']$/;"	v	class:Query.Meta
paginate_by	views.py	/^    paginate_by = 20$/;"	v	class:ListQueryLogView
param	utils.py	/^def param(name):$/;"	f
params_for_url	models.py	/^    def params_for_url(self):$/;"	m	class:Query
passes_blacklist	models.py	/^    def passes_blacklist(self):$/;"	m	class:Query
passes_blacklist	utils.py	/^def passes_blacklist(sql):$/;"	f
post	views.py	/^    def post(self, request):$/;"	m	class:PlayQueryView
post	views.py	/^    def post(self, request, query_id):$/;"	m	class:QueryView
process	models.py	/^    def process(self):$/;"	m	class:QueryResult
process_columns	models.py	/^    def process_columns(self):$/;"	m	class:QueryResult
process_rows	models.py	/^    def process_rows(self):$/;"	m	class:QueryResult
query	models.py	/^    query = models.ForeignKey(Query, null=True, blank=True, on_delete=models.SET_NULL)$/;"	v	class:QueryLog
query_viewmodel	views.py	/^def query_viewmodel(request, query, title=None, form=None, message=None, run_query=True, error=None):$/;"	f
raw_id_fields	admin.py	/^    raw_id_fields = ('created_by_user',)$/;"	v	class:QueryAdmin
register	templatetags/explorer_tags.py	/^register = template.Library()$/;"	v
render	views.py	/^    def render(self, request):$/;"	m	class:PlayQueryView
render_template	views.py	/^    def render_template(self, template, ctx):$/;"	m	class:ExplorerContextMixin
render_with_sql	views.py	/^    def render_with_sql(self, request, query, run_query=True, error=None):$/;"	m	class:PlayQueryView
run_at	models.py	/^    run_at = models.DateTimeField(auto_now_add=True)$/;"	v	class:QueryLog
run_by_user	models.py	/^    run_by_user = models.ForeignKey(settings.AUTH_USER_MODEL, null=True, blank=True)$/;"	v	class:QueryLog
safe_cast	utils.py	/^def safe_cast(val, to_type, default=None):$/;"	f
safe_login_prompt	utils.py	/^def safe_login_prompt(request):$/;"	f
savePivotState	static/explorer/explorer.js	/^ExplorerEditor.prototype.savePivotState = function(state) {$/;"	m	class:ExplorerEditor
schema	views.py	/^def schema(request):$/;"	f
schema_info	utils.py	/^def schema_info():$/;"	f
serializeParams	static/explorer/explorer.js	/^ExplorerEditor.prototype.serializeParams = function(params) {$/;"	m	class:ExplorerEditor
setUp	tests/test_models.py	/^    def setUp(self):$/;"	m	class:TestQueryResults
setUp	tests/test_utils.py	/^    def setUp(self):$/;"	m	class:TestSqlBlacklist
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestCSVFromSQL
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestCreatedBy
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestDownloadView
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestEmailQuery
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestFormat
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestParamsInViews
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestQueryCreateView
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestQueryDetailView
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestQueryListView
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestQueryLog
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestQueryPlayground
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestSQLDownloadViews
setUp	tests/test_views.py	/^    def setUp(self):$/;"	m	class:TestSchemaView
shared	models.py	/^    def shared(self):$/;"	m	class:Query
shared_dict_update	utils.py	/^def shared_dict_update(target, source):$/;"	f
showRows	static/explorer/explorer.js	/^ExplorerEditor.prototype.showRows = function() {$/;"	m	class:ExplorerEditor
showSchema	static/explorer/explorer.js	/^ExplorerEditor.prototype.showSchema = function() {$/;"	m	class:ExplorerEditor
snapshot	forms.py	/^    snapshot = BooleanField(widget=CheckboxInput, required=False)$/;"	v	class:QueryForm
snapshot	models.py	/^    snapshot = models.BooleanField(default=False, help_text="Include in snapshot task (if enabled)")$/;"	v	class:Query
snapshot_queries	tasks.py	/^def snapshot_queries():$/;"	f
snapshot_query	tasks.py	/^def snapshot_query(query_id):$/;"	f
snapshots	models.py	/^    def snapshots(self):$/;"	m	class:Query
sql	forms.py	/^    sql = SqlField()$/;"	v	class:QueryForm
sql	models.py	/^    sql = models.TextField()$/;"	v	class:Query
sql	models.py	/^    sql = models.TextField(null=True, blank=True)$/;"	v	class:QueryLog
sql	tests/factories.py	/^    sql = "SELECT 1+1 AS TWO"  # same result in postgres and sqlite$/;"	v	class:SimpleQueryFactory
sql	tests/factories.py	/^    sql = "SELECT 2+2 AS FOUR"/;"	v	class:QueryLogFactory
stats	models.py	/^    def stats(self):$/;"	m	class:ColumnSummary
stream_query	views.py	/^def stream_query(request, query_id):$/;"	f
success_url	views.py	/^    success_url = reverse_lazy("explorer_index")$/;"	v	class:DeleteQueryView
swap_params	utils.py	/^def swap_params(sql, params):$/;"	f
tearDown	tests/test_utils.py	/^    def tearDown(self):$/;"	m	class:TestSqlBlacklist
template_name	views.py	/^    template_name = 'explorer\/query.html'$/;"	v	class:CreateQueryView
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestCSVFromSQL
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestDownloadView
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestQueryDetailView
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestQueryListView
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestQueryLog
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestQueryPlayground
test_admin_required	tests/test_views.py	/^    def test_admin_required(self):$/;"	m	class:TestSchemaView
test_app_exclusion_list	tests/test_utils.py	/^    def test_app_exclusion_list(self):$/;"	m	class:TestSchemaInfo
test_app_inclusion_list	tests/test_utils.py	/^    def test_app_inclusion_list(self):$/;"	m	class:TestSchemaInfo
test_app_inclusion_list_excluded	tests/test_utils.py	/^    def test_app_inclusion_list_excluded(self):$/;"	m	class:TestSchemaInfo
test_app_inclusion_list_included	tests/test_utils.py	/^    def test_app_inclusion_list_included(self):$/;"	m	class:TestSchemaInfo
test_async_results	tests/test_tasks.py	/^    def test_async_results(self, mocked_s3):$/;"	m	class:TestTasks
test_async_results_failswith_message	tests/test_tasks.py	/^    def test_async_results_failswith_message(self, mocked_s3):$/;"	m	class:TestTasks
test_avg_duration	tests/test_models.py	/^    def test_avg_duration(self):$/;"	m	class:TestQueryModel
test_change_permission_required	tests/test_views.py	/^    def test_change_permission_required(self):$/;"	m	class:TestQueryCreateView
test_change_permission_required_to_save_query	tests/test_views.py	/^    def test_change_permission_required_to_save_query(self):$/;"	m	class:TestQueryDetailView
test_column_access	tests/test_models.py	/^    def test_column_access(self):$/;"	m	class:TestQueryResults
test_creating_query_does_not_save_to_log	tests/test_views.py	/^    def test_creating_query_does_not_save_to_log(self):$/;"	m	class:TestQueryLog
test_custom_delimiter	tests/test_exporters.py	/^    def test_custom_delimiter(self):$/;"	m	class:TestCsv
test_data	tests/test_models.py	/^    def test_data(self):$/;"	m	class:TestQueryResults
test_default_blacklist_prevents_deletes	tests/test_utils.py	/^    def test_default_blacklist_prevents_deletes(self):$/;"	m	class:TestSqlBlacklist
test_default_params_used	tests/test_models.py	/^    def test_default_params_used(self):$/;"	m	class:TestQueryModel
test_doesnt_render_results_if_show_is_none	tests/test_views.py	/^    def test_doesnt_render_results_if_show_is_none(self):$/;"	m	class:TestQueryDetailView
test_download_csv	tests/test_views.py	/^    def test_download_csv(self):$/;"	m	class:TestDownloadView
test_download_defaults_to_csv	tests/test_views.py	/^    def test_download_defaults_to_csv(self):$/;"	m	class:TestDownloadView
test_download_json	tests/test_views.py	/^    def test_download_json(self):$/;"	m	class:TestDownloadView
test_downloading_from_playground	tests/test_views.py	/^    def test_downloading_from_playground(self):$/;"	m	class:TestCSVFromSQL
test_email_calls_task	tests/test_views.py	/^    def test_email_calls_task(self, mocked_execute):$/;"	m	class:TestEmailQuery
test_empty_data	tests/test_models.py	/^    def test_empty_data(self):$/;"	m	class:TestColumnSummary
test_empty_params_does_nothing	tests/test_utils.py	/^    def test_empty_params_does_nothing(self):$/;"	m	class:TestParams
test_empty_playground_renders	tests/test_views.py	/^    def test_empty_playground_renders(self):$/;"	m	class:TestQueryPlayground
test_executes	tests/test_models.py	/^    def test_executes(self):$/;"	m	class:TestColumnSummary
test_extracting_params	tests/test_utils.py	/^    def test_extracting_params(self):$/;"	m	class:TestParams
test_failing_blacklist_means_query_doesnt_execute	tests/test_views.py	/^    def test_failing_blacklist_means_query_doesnt_execute(self, mocked_conn):$/;"	m	class:TestQueryDetailView
test_fails_blacklist	tests/test_views.py	/^    def test_fails_blacklist(self):$/;"	m	class:TestQueryPlayground
test_final_sql_uses_merged_params	tests/test_models.py	/^    def test_final_sql_uses_merged_params(self):$/;"	m	class:TestQueryModel
test_form_fails_blacklist_even_with_params	tests/test_forms.py	/^    def test_form_fails_blacklist_even_with_params(self):$/;"	m	class:TestFormValidation
test_form_is_always_valid_with_params	tests/test_forms.py	/^    def test_form_is_always_valid_with_params(self):$/;"	m	class:TestFormValidation
test_form_is_not_valid_with_invalid_sql	tests/test_forms.py	/^    def test_form_is_not_valid_with_invalid_sql(self):$/;"	m	class:TestFormValidation
test_form_is_valid_with_valid_sql	tests/test_forms.py	/^    def test_form_is_valid_with_valid_sql(self):$/;"	m	class:TestFormValidation
test_get_headers_no_results	tests/test_models.py	/^    def test_get_headers_no_results(self):$/;"	m	class:TestQueryResults
test_get_params_for_request	tests/test_utils.py	/^    def test_get_params_for_request(self):$/;"	m	class:TestParams
test_get_params_for_request_empty	tests/test_utils.py	/^    def test_get_params_for_request_empty(self):$/;"	m	class:TestParams
test_get_params_from_url	tests/test_utils.py	/^    def test_get_params_from_url(self):$/;"	m	class:TestParams
test_get_run_count	tests/test_models.py	/^    def test_get_run_count(self):$/;"	m	class:TestQueryModel
test_get_snapshots_sorts_snaps	tests/test_models.py	/^    def test_get_snapshots_sorts_snaps(self, mocked_conn):$/;"	m	class:TestQueryModel
test_handles_null_as_zero	tests/test_models.py	/^    def test_handles_null_as_zero(self):$/;"	m	class:TestColumnSummary
test_headers	tests/test_models.py	/^    def test_headers(self):$/;"	m	class:TestQueryResults
test_headers	tests/test_views.py	/^    def test_headers(self):$/;"	m	class:TestQueryListView
test_individual_view_permission	tests/test_views.py	/^    def test_individual_view_permission(self):$/;"	m	class:TestQueryDetailView
test_is_playground	tests/test_views.py	/^    def test_is_playground(self):$/;"	m	class:TestQueryLog
test_loads_query_from_log	tests/test_views.py	/^    def test_loads_query_from_log(self):$/;"	m	class:TestQueryPlayground
test_log_saves_duration	tests/test_models.py	/^    def test_log_saves_duration(self):$/;"	m	class:TestQueryModel
test_modified_date_gets_updated_after_viewing_query	tests/test_views.py	/^    def test_modified_date_gets_updated_after_viewing_query(self):$/;"	m	class:TestQueryDetailView
test_multiple_queries_are_zip_file	tests/test_actions.py	/^    def test_multiple_queries_are_zip_file(self):$/;"	m	class:TestSqlQueryActions
test_multiple_transforms	tests/test_models.py	/^    def test_multiple_transforms(self):$/;"	m	class:TestQueryResults
test_new_query_gets_created_by_logged_in_user	tests/test_views.py	/^    def test_new_query_gets_created_by_logged_in_user(self):$/;"	m	class:TestCreatedBy
test_non_string_param_gets_swapper	tests/test_utils.py	/^    def test_non_string_param_gets_swapper(self):$/;"	m	class:TestParams
test_numeric_detection	tests/test_models.py	/^    def test_numeric_detection(self):$/;"	m	class:TestQueryResults
test_overriding_blacklist	tests/test_utils.py	/^    def test_overriding_blacklist(self):$/;"	m	class:TestSqlBlacklist
test_packaging_removes_commas_from_file_name	tests/test_actions.py	/^    def test_packaging_removes_commas_from_file_name(self):$/;"	m	class:TestSqlQueryActions
test_params_get_merged	tests/test_models.py	/^    def test_params_get_merged(self):$/;"	m	class:TestQueryModel
test_params_get_swapped	tests/test_utils.py	/^    def test_params_get_swapped(self):$/;"	m	class:TestParams
test_params_in_download	tests/test_views.py	/^    def test_params_in_download(self):$/;"	m	class:TestDownloadView
test_permissions_show_only_allowed_queries	tests/test_views.py	/^    def test_permissions_show_only_allowed_queries(self):$/;"	m	class:TestQueryListView
test_playground_doesnt_render_with_posted_sql_if_show_is_none	tests/test_views.py	/^    def test_playground_doesnt_render_with_posted_sql_if_show_is_none(self):$/;"	m	class:TestQueryPlayground
test_playground_query_log	tests/test_models.py	/^    def test_playground_query_log(self):$/;"	m	class:TestQueryModel
test_playground_renders_with_empty_posted_sql	tests/test_views.py	/^    def test_playground_renders_with_empty_posted_sql(self):$/;"	m	class:TestQueryPlayground
test_playground_renders_with_posted_sql	tests/test_views.py	/^    def test_playground_renders_with_posted_sql(self):$/;"	m	class:TestQueryPlayground
test_playground_renders_with_query_sql	tests/test_views.py	/^    def test_playground_renders_with_query_sql(self):$/;"	m	class:TestQueryPlayground
test_playground_saves_query_to_log	tests/test_views.py	/^    def test_playground_saves_query_to_log(self):$/;"	m	class:TestQueryLog
test_posting_query_saves_correctly	tests/test_views.py	/^    def test_posting_query_saves_correctly(self):$/;"	m	class:TestQueryDetailView
test_queries_deleting_stuff_are_not_ok	tests/test_utils.py	/^    def test_queries_deleting_stuff_are_not_ok(self):$/;"	m	class:TestSqlBlacklist
test_queries_dropping_views_is_not_ok_and_not_case_sensitive	tests/test_utils.py	/^    def test_queries_dropping_views_is_not_ok_and_not_case_sensitive(self):$/;"	m	class:TestSqlBlacklist
test_query_gets_logged_and_appears_on_log_page	tests/test_views.py	/^    def test_query_gets_logged_and_appears_on_log_page(self):$/;"	m	class:TestQueryLog
test_query_log	tests/test_models.py	/^    def test_query_log(self):$/;"	m	class:TestQueryModel
test_query_logs_final_sql	tests/test_models.py	/^    def test_query_logs_final_sql(self):$/;"	m	class:TestQueryModel
test_query_saves_to_log	tests/test_views.py	/^    def test_query_saves_to_log(self):$/;"	m	class:TestQueryLog
test_query_snapshot_renders	tests/test_views.py	/^    def test_query_snapshot_renders(self, mocked_conn):$/;"	m	class:TestQueryDetailView
test_query_update_doesnt_change_created_user	tests/test_views.py	/^    def test_query_update_doesnt_change_created_user(self):$/;"	m	class:TestCreatedBy
test_query_with_bad_sql_renders_error	tests/test_views.py	/^    def test_query_with_bad_sql_renders_error(self):$/;"	m	class:TestQueryDetailView
test_query_with_bad_sql_renders_error_on_save	tests/test_views.py	/^    def test_query_with_bad_sql_renders_error_on_save(self):$/;"	m	class:TestQueryDetailView
test_query_with_no_resultset_doesnt_throw_error	tests/test_views.py	/^    def test_query_with_no_resultset_doesnt_throw_error(self):$/;"	m	class:TestQueryPlayground
test_renders_with_title	tests/test_views.py	/^    def test_renders_with_title(self):$/;"	m	class:TestQueryCreateView
test_retrieving_query_works_with_params	tests/test_views.py	/^    def test_retrieving_query_works_with_params(self):$/;"	m	class:TestParamsInViews
test_returns_formatted_sql	tests/test_views.py	/^    def test_returns_formatted_sql(self):$/;"	m	class:TestFormat
test_returns_schema_contents	tests/test_views.py	/^    def test_returns_schema_contents(self):$/;"	m	class:TestSchemaView
test_run_count	tests/test_views.py	/^    def test_run_count(self):$/;"	m	class:TestQueryListView
test_saving_non_executing_query_with__wrong_url_params_works	tests/test_views.py	/^    def test_saving_non_executing_query_with__wrong_url_params_works(self):$/;"	m	class:TestParamsInViews
test_schema_info_returns_valid_data	tests/test_utils.py	/^    def test_schema_info_returns_valid_data(self):$/;"	m	class:TestSchemaInfo
test_shared	tests/test_models.py	/^    def test_shared(self):$/;"	m	class:TestQueryModel
test_shared_dict_update	tests/test_utils.py	/^    def test_shared_dict_update(self):$/;"	m	class:TestParams
test_single_query_is_csv_file	tests/test_actions.py	/^    def test_single_query_is_csv_file(self):$/;"	m	class:TestSqlQueryActions
test_snapshots	tests/test_tasks.py	/^    def test_snapshots(self, mocked_s3):$/;"	m	class:TestTasks
test_sql_download_csv	tests/test_views.py	/^    def test_sql_download_csv(self):$/;"	m	class:TestSQLDownloadViews
test_sql_download_csv_with_bad_delim	tests/test_views.py	/^    def test_sql_download_csv_with_bad_delim(self):$/;"	m	class:TestSQLDownloadViews
test_sql_download_csv_with_custom_delim	tests/test_views.py	/^    def test_sql_download_csv_with_custom_delim(self):$/;"	m	class:TestSQLDownloadViews
test_sql_download_csv_with_tab_delim	tests/test_views.py	/^    def test_sql_download_csv_with_tab_delim(self):$/;"	m	class:TestSQLDownloadViews
test_sql_download_json	tests/test_views.py	/^    def test_sql_download_json(self):$/;"	m	class:TestSQLDownloadViews
test_sql_whitelist_ok	tests/test_utils.py	/^    def test_sql_whitelist_ok(self):$/;"	m	class:TestSqlBlacklist
test_stream_csv_from_query	tests/test_views.py	/^    def test_stream_csv_from_query(self):$/;"	m	class:TestCSVFromSQL
test_summary_gets_built	tests/test_models.py	/^    def test_summary_gets_built(self):$/;"	m	class:TestQueryResults
test_summary_gets_built_for_multiple_cols	tests/test_models.py	/^    def test_summary_gets_built_for_multiple_cols(self):$/;"	m	class:TestQueryResults
test_swappable_params_are_built_correctly	tests/test_utils.py	/^    def test_swappable_params_are_built_correctly(self):$/;"	m	class:TestParams
test_token_auth	tests/test_views.py	/^    def test_token_auth(self):$/;"	m	class:TestQueryDetailView
test_transform_alters_row	tests/test_models.py	/^    def test_transform_alters_row(self):$/;"	m	class:TestQueryResults
test_transforms_are_identified	tests/test_models.py	/^    def test_transforms_are_identified(self):$/;"	m	class:TestQueryResults
test_truncating_querylogs	tests/test_tasks.py	/^    def test_truncating_querylogs(self):$/;"	m	class:TestTasks
test_unicode_with_nulls	tests/test_models.py	/^    def test_unicode_with_nulls(self):$/;"	m	class:TestQueryResults
test_user_query_views	tests/test_views.py	/^    def test_user_query_views(self):$/;"	m	class:TestQueryDetailView
test_users_without_change_permissions_can_use_params	tests/test_views.py	/^    def test_users_without_change_permissions_can_use_params(self):$/;"	m	class:TestParamsInViews
test_writing_datetimes	tests/test_exporters.py	/^    def test_writing_datetimes(self):$/;"	m	class:TestJson
test_writing_excel	tests/test_exporters.py	/^    def test_writing_excel(self):$/;"	m	class:TestExcel
test_writing_json	tests/test_exporters.py	/^    def test_writing_json(self):$/;"	m	class:TestJson
test_writing_unicode	tests/test_exporters.py	/^    def test_writing_unicode(self):$/;"	m	class:TestCsv
title	models.py	/^    title = models.CharField(max_length=255)$/;"	v	class:Query
title	tests/factories.py	/^    title = factory.Sequence(lambda n: 'My siple query %s' % n)$/;"	v	class:SimpleQueryFactory
truncate_querylogs	tasks.py	/^def truncate_querylogs(days):$/;"	f
url_get_log_id	utils.py	/^def url_get_log_id(request):$/;"	f
url_get_params	utils.py	/^def url_get_params(request):$/;"	f
url_get_query_id	utils.py	/^def url_get_query_id(request):$/;"	f
url_get_rows	utils.py	/^def url_get_rows(request):$/;"	f
url_get_show	utils.py	/^def url_get_show(request):$/;"	f
urlpatterns	urls.py	/^urlpatterns = [$/;"	v
user_can_see_query	utils.py	/^def user_can_see_query(request, kwargs):$/;"	f
validate	forms.py	/^    def validate(self, value):$/;"	m	class:SqlField
verbose_name_plural	models.py	/^        verbose_name_plural = 'Queries'$/;"	v	class:Query.Meta
view_permission	views.py	/^def view_permission(f):$/;"	f
view_permission_list	views.py	/^def view_permission_list(f):$/;"	f
wrap	views.py	/^    def wrap(request, *args, **kwargs):$/;"	f	function:change_permission
wrap	views.py	/^    def wrap(request, *args, **kwargs):$/;"	f	function:view_permission
wrap	views.py	/^    def wrap(request, *args, **kwargs):$/;"	f	function:view_permission_list
